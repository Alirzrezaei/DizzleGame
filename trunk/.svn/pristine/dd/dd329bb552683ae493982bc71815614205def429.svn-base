
package gui;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.Group;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.effect.BlendMode;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;

/**
 *
 * @author Rezaei
 */
public class FXMLDocumentController implements Initializable {
    
  
    private logic.Game game;
    private JavaFXGUI gui;
    private int level; 
    private int noOfPlayers;
    
    @Override
    public void initialize(URL url, ResourceBundle rb) {
        ImageView img1 = new ImageView(new Image("gui/img/bFour.png"));
        ImageView img2 = new ImageView(new Image("gui/img/jewelBlue.png"));
        
        img1.setBlendMode(BlendMode.ADD);
        
        Group g = new Group(img2, img1);
       // pnTest.getChildren().add(g);
        
//        ImageView crossed = new ImageView(new Image("gui/img/crossed.png"));
//        crossed.setBlendMode(BlendMode.MULTIPLY);
//        
//        Group g2 = new Group(pnTest.getChildren().get(0), crossed);
//        
//        pnTest.getChildren().add(g2);

        gameInitializer();
        
    } 
    
    private void gameInitializer()  {

        if (game != null) {
            //game.clear();
        }
        
        //label for levels 
        Label lblLevels = new Label("Levels");
        
        //combo box for levels
        ComboBox levels = new ComboBox();
        levels.getItems().addAll("1", "2", "3");
        levels.setValue("1");

        //label for players
         Label lblPlayers = new Label("players");
         
         
         // combo box for players
        ComboBox players = new ComboBox();
        players.getItems().addAll("2", "3", "4");
        players.setValue("2");
        
        // button to press OK for confirmation of settings
        Button btnOk = new Button("OK");
        
        // make a container for components
        StackPane secondaryLayout = new StackPane();

        
       //add all components to the container of second window
        secondaryLayout.getChildren().add(btnOk);
        secondaryLayout.getChildren().add(levels);
        secondaryLayout.getChildren().add(lblLevels);
        secondaryLayout.getChildren().add(lblPlayers);
        secondaryLayout.getChildren().add(players);
        
        // positioning of components
        btnOk.setPrefSize(75, 25);
        
        lblLevels.setTranslateX(-65);
        lblLevels.setTranslateY(-50);
        
        lblPlayers.setTranslateX(-65);
        lblPlayers.setTranslateY(0);
        
        players.setTranslateX(30);
        players.setTranslateY(0);
        
        levels.setTranslateX(30);
        levels.setTranslateY(-50);
 
  
        btnOk.setTranslateX(0);
        btnOk.setTranslateY(50);

        //add the layout to Scene
        Scene secondScene = new Scene(secondaryLayout, 250, 150);

        // New window (Stage)
        Stage newWindow = new Stage();
        newWindow.setTitle("Setting Initializer");
        newWindow.setScene(secondScene);

        // Set position of second window, related to primary window.
        newWindow.setX(500);
        newWindow.setY(500);
        newWindow.setAlwaysOnTop(true);

        newWindow.show();

        btnOk.setOnAction((ActionEvent e) -> {
            if (levels.getValue().equals("1")) {
                level = 1;
            } else if (levels.getValue().equals("2")) {
                level = 2;
            } else if (levels.getValue().equals("3")) {
                level = 3;
            } else {
                level = 1;
            }
            
             if (players.getValue().equals("2")) {
                noOfPlayers = 2;
            } else if (players.getValue().equals("3")) {
                noOfPlayers = 3;
            } else if (players.getValue().equals("4")) {
                noOfPlayers = 4;
            } else {
                noOfPlayers = 2;
            }
       
            newWindow.close();
           
            this.gui = new JavaFXGUI();
       
           this.game = new logic.Game(gui, level, noOfPlayers);
            

            

        });

    }
    
}
