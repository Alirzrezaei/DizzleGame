/*
 * This application is a game project developed by Alireza Rezaei ITE102772
 * The purpose is for Advanced Programming course.
 */
package logic;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.stage.FileChooser;

/**
 *
 * @author Rezaei
 */
public class IO {
    
    private final String path = "src/logic/levels/Level";
    private final String ext = ".json";
    private Game game;
    
    
    protected LevelReader jsonParser(int level){
        
        
        Gson gson = new Gson();
        JsonArray jsonArray = null;
        FileReader reader;
        LevelReader levelObj = null;
        try {
            
            reader = new FileReader(path+""+level+""+ext);
            
            //creating an object of level reader from json file
            levelObj = gson.fromJson(reader, LevelReader.class);
            for (int i = 0; i < levelObj.getField().length; i++) {
                for (int j = 0; j < levelObj.getField()[i].length; j++) {
                    System.out.print(", "+ levelObj.getField()[i][j]);
                }
                System.out.println("");
            }

            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(IO.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return levelObj;
    }
    protected Game load(GUIConnector gui, Game game) throws FileNotFoundException{
        this.game = game;
        FileChooser chooser = new FileChooser();
        chooser.setInitialDirectory(new File(System.getProperty("user.dir")));
        chooser.setTitle("Choose location To Save Report");
        File selectedFile = null;
        if (selectedFile == null) {
            selectedFile = chooser.showOpenDialog(null);
        }

        Gson gson = new Gson();
        //JSONArray jsonArray = null;
     
        FileReader reader = new FileReader(selectedFile.getPath());

        SaveLoadObject load = gson.fromJson(reader, SaveLoadObject.class);
        
        System.out.println("load " + load.getLevelNo());
        
        this.game = new Game(gui, load);
        
        return this.game;
    
        
    }
    protected void Save(int round, int levelNo, int turnOf, int[] dice, Player[] players){
        
        Gson gson = new Gson();
        SaveLoadObject saveObject = new SaveLoadObject();
        
    }
}
